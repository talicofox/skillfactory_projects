Задание 4.1


База данных содержит список аэропортов практически всех крупных городов России.
В большинстве городов есть только один аэропорт. Исключение составляет:

Ответ: Moscow, Ulyanovsk

Решение:

SELECT a.city
FROM dst_project.airports a
GROUP BY a.city
HAVING COUNT(*) > 1


Задание 4.2


Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. 
Сколько всего статусов для рейсов определено в таблице?

Ответ: 6

Решение:

SELECT DISTINCT f.status
FROM dst_project.flights f

Вопрос 2. Какое количество самолетов находятся в воздухе на момент среза в базе 
(статус рейса «самолёт уже вылетел и находится в воздухе»). 

Ответ: 58

Решение:

SELECT count(f.status)
FROM dst_project.flights f
WHERE f.status = 'Departed'


Вопрос 3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели  (Boeing 777-300)? 

Ответ: 402


Решение:

SELECT a.model,
       a.aircraft_code,
       count(s.seat_no)
FROM dst_project.aircrafts a
JOIN dst_project.seats s ON a.aircraft_code = s.aircraft_code
WHERE a.aircraft_code ='773'
GROUP BY a.model,
         a.aircraft_code

Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года? 

Ответ: 74227

Решение:

SELECT count(f.status)
FROM dst_project.flights f
WHERE NOT f.status = 'Cancelled'
  	AND f.actual_arrival BETWEEN to_timestamp('2017-04-01', 'YYYY-MM-DD') 
	AND to_timestamp('2017-09-01', 'YYYY-MM-DD')


Задание 4.3


Вопрос 1. Сколько всего рейсов было отменено по данным базы?

Ответ: 437

Решение:

SELECT count(f.status)
FROM dst_project.flights f
WHERE f.status = 'Cancelled'

Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок? 

Ответ:
Boeing  - 3
Sukhoi Superjet  - 1
Airbus  - 3


Решение:

WITH b AS
  (--выделяем бренд: это 1-ое слово в модели
 SELECT a.model,

     (SELECT regexp_split_to_table(a.model, '\s+')
      LIMIT 1) AS brand
   FROM dst_project.aircrafts a)
SELECT b.brand, --cчитаем количество моделей бренда
 count(b.model)
FROM b
GROUP BY b.brand
	

Вопрос 3. В какой части (частях) света находится больше аэропортов? 

Ответ: Europe, Asia

Решение

WITH b AS
  (--выделяем часть света: это 1-ое слово в timezone
 SELECT a.airport_code,

     (SELECT regexp_split_to_table(a.timezone, '\W+')
      LIMIT 1) AS part_world
   FROM dst_project.airports a)
SELECT b.part_world, --cчитаем количество аэропортов по частям света
 count(b.airport_code)
FROM b
GROUP BY b.part_world


Вопрос 4. У какого рейса была самая большая задержка прибытия за все время сбора данных? 
Введите id рейса (flight_id). 

Ответ: 157571

Решение:

SELECT f.flight_id,
       f.actual_arrival-f.scheduled_arrival,
       f.actual_arrival,
       f.scheduled_arrival
FROM dst_project.flights f
WHERE f.actual_arrival IS NOT NULL
ORDER BY f.actual_arrival-f.scheduled_arrival DESC


Задание 4.4


Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных?

Ответ: 14.08.2016

Решение:

SELECT f.scheduled_departure
FROM dst_project.flights f
WHERE f.scheduled_departure IS NOT NULL
ORDER BY scheduled_departure

Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе? 

Ответ:  530

Решение:

SELECT 
	DISTINCT f.scheduled_arrival-f.scheduled_departure diff,
                60*EXTRACT(HOUR
                           FROM f.scheduled_arrival-f.scheduled_departure)+ 
		EXTRACT(MINUTE FROM f.scheduled_arrival-f.scheduled_departure) diff_min
FROM dst_project.flights f
ORDER BY diff DESC

Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс? 

Ответ:  DME – UUS , DME - PKC

Решение: 

WITH a AS
  (--самое длинное время рейса)
SELECT DISTINCT f.scheduled_arrival-f.scheduled_departure diff
   FROM dst_project.flights f
   ORDER BY diff DESC
   LIMIT 1)
SELECT DISTINCT ff.departure_airport,
                ff.arrival_airport
FROM dst_project.flights ff
WHERE ff.scheduled_arrival-ff.scheduled_departure IN
    (SELECT diff
     FROM a)

Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах?
Секунды округляются в меньшую сторону (отбрасываются до минут). 

Ответ: 128

Решение:

SELECT 
	AVG(60*EXTRACT(HOUR
                           FROM f.scheduled_arrival-f.scheduled_departure)+ 
	EXTRACT(MINUTE FROM f.scheduled_arrival-f.scheduled_departure)) diff_min
FROM dst_project.flights f


Задание 4.5


Вопрос 1. Мест какого класса у SU9 больше всего?

Ответ: Economy

Решение:

SELECT a.aircraft_code,
       a.model,
       s.fare_conditions,
       count(s.seat_no)
FROM dst_project.aircrafts a
JOIN dst_project.seats s 
ON a.aircraft_code = s.aircraft_code
WHERE a.aircraft_code = 'SU9'
GROUP BY a.model,
         a.aircraft_code,
         s.fare_conditions

Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю? 

Ответ: 3400

Решение:

SELECT MIN(b.total_amount) 
FROM dst_project.bookings b

Вопрос 3. Какой номер места был у пассажира с id = 4313 788533? 

Ответ: 2А

Решение:

SELECT t.ticket_no,
       b.seat_no
FROM dst_project.tickets t
JOIN dst_project.boarding_passes b 
	ON t.ticket_no = b.ticket_no
WHERE t.passenger_id='4313 788533'


Задание 5.1


Вопрос 1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?

Ответ: 486

Решение:

SELECT 
	count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports a 
	ON a.airport_code = f.arrival_airport
WHERE a.city = 'Anapa'
  	AND date_part('year', f.actual_arrival)=2017

Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года? 

Ответ: 127

Решение:

SELECT 
	date_part('month',f.actual_departure) month_,
	count(f.flight_id) 
FROM dst_project.flights f
JOIN dst_project.airports a 
	ON a.airport_code = f.departure_airport
WHERE a.city = 'Anapa' and
	date_part('year',f.actual_departure)=2017 
GROUP BY date_part('month',f.actual_departure)
HAVING date_part('month',f.actual_departure)<3 and date_part('month',f.actual_departure)=12

Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время.

Ответ: 1

Решение:

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports a 
	ON a.airport_code = f.departure_airport
WHERE a.city = 'Anapa'
	AND f.status = 'Cancelled'

Вопрос 4. Сколько рейсов из Анапы не летают в Москву?

Ответ: 453

Решение:

SELECT count(f.flight_id)
FROM dst_project.flights f
JOIN dst_project.airports a ON a.airport_code = f.departure_airport
JOIN dst_project.airports aa ON aa.airport_code = f.arrival_airport
WHERE a.city = 'Anapa'
	AND NOT aa.city = 'Moscow'

Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?

Ответ: Boeing 737-300

Решение:

WITH models AS -- модели с количеством мест
  (SELECT a.aircraft_code,
          a.model,
          count(s.seat_no) seats
   FROM dst_project.aircrafts a
   JOIN dst_project.seats s ON a.aircraft_code = s.aircraft_code
   GROUP BY a.aircraft_code)
SELECT DISTINCT f.aircraft_code, -- модели самолетов, летающих из Анапы
                m.model,
                m.seats
FROM dst_project.flights f
JOIN dst_project.airports p ON p.airport_code = f.departure_airport
JOIN models m ON f.aircraft_code = m.aircraft_code
WHERE p.city = 'Anapa'
ORDER BY m.seats DESC

--------------------------
ИТОГОВЫЙ ЗАПРОС

WITH direct_flights as(	--выбираем необходимые данные по полетам из т-цы flights
	SELECT f.flight_id,
		f.departure_airport,
		f.arrival_airport,
		f.aircraft_code,
		f.scheduled_departure::date,
		EXTRACT(DOW FROM f.scheduled_departure) dow, --день недели
		date_part('month',f.scheduled_departure) month_departure,
		date_part('day',f.scheduled_departure) day_departure,
		date_part('hour',f.scheduled_departure) hour_departure,
		date_part('month',f.scheduled_arrival) month_arrival,
		date_part('day',f.scheduled_arrival) day_arrival,
		date_part('hour',f.scheduled_arrival) hour_arrival,
		(60*EXTRACT(HOUR FROM f.scheduled_arrival-f.scheduled_departure)+ --длительность рейса в мин по расписанию 
			EXTRACT(MINUTE FROM f.scheduled_arrival-f.scheduled_departure)) schedulede_range,	
		(60*EXTRACT(HOUR FROM f.actual_arrival-f.actual_departure)+ 	--фактическая длительность рейса в мин
			EXTRACT(MINUTE FROM f.actual_arrival-f.actual_departure)) actual_range,	
		a.longitude lon_departure,	--долгота места вылета
		a.latitude lat_departure, 	--широта места вылета
		aa.city, 			-- город прилета
		aa.longitude lon_arrival,	--долгота места прилета
		aa.latitude lat_arrival		--широта места прилета
	FROM dst_project.flights f
	JOIN dst_project.airports a ON a.airport_code = f.departure_airport	--привязка к аэропорту вылета
	JOIN dst_project.airports aa ON aa.airport_code = f.arrival_airport	--привязка к аэропорту прилета
	WHERE a.city = 'Anapa'							-- ограничения на город вылета
  		AND (date_trunc('month', scheduled_departure) in ('2017-01-01','2017-02-01', '2016-12-01')) --ограничения на зимний сезон
  		AND status not in ('Cancelled')	--отбрасываем отмененные рейсы
	),
	
return_flights as(SELECT f0.flight_id, --выбираем обратные рейсы
		f0.departure_airport departure_airport,
		f0.arrival_airport arrival_airport,
		f0.aircraft_code aircraft_code,
		date_part('month',f0.scheduled_departure) month_departure,
		date_part('day',f0.scheduled_departure) day_departure,
		date_part('hour',f0.scheduled_departure) hour_departure,
		date_part('month',f0.scheduled_arrival) month_arrival,
		date_part('day',f0.scheduled_arrival) day_arrival,
		date_part('hour',f0.scheduled_arrival) hour_arrival
		
	FROM dst_project.flights f0
	JOIN dst_project.airports a0 ON a0.airport_code = f0.departure_airport	--привязка к аэропорту вылета
	JOIN dst_project.airports aa0 ON aa0.airport_code = f0.arrival_airport	--привязка к аэропорту прилета
	WHERE aa0.city = 'Anapa'							-- ограничения на город прилета
  		AND (date_trunc('month', f0.scheduled_departure) in ('2017-01-01','2017-02-01', '2016-12-01')) --ограничения на зимний сезон
  		AND f0.status not in ('Cancelled')),

f1 AS( --объединяем прямые и обратные рейсы
	SELECT 
		d.flight_id,
		d.departure_airport,
		d.arrival_airport,
		d.aircraft_code,
		d.scheduled_departure,
		d.dow, --день недели
		d.month_departure,
		d.day_departure,
		d.hour_departure,
		d.hour_arrival,
		d.schedulede_range,	
		d.actual_range,	
		d.lon_departure,
		d.lat_departure,
		d.city,
		d.lon_arrival,
		d.lat_arrival,
		f2.flight_id flight_id_r --id обратного рейса
	FROM direct_flights d
	JOIN return_flights f2 ON d.departure_airport = f2.arrival_airport and d.arrival_airport = f2.departure_airport
			and d.month_arrival = f2. month_departure and d.day_arrival = f2. day_departure
			and d.aircraft_code = f2.aircraft_code),

t2 as(	--выбираем информацию по купленным билетам из т-цы ticket_flights
	SELECT
    		t.flight_id,
    		COUNT(t.ticket_no) as tickets_total,	--общее количество билетов
    		COUNT(CASE WHEN t.fare_conditions = 'Economy' THEN t.ticket_no END) AS tickets_econom, -- кол билетов в экономе
    		COUNT(CASE WHEN t.fare_conditions = 'Business' THEN t.ticket_no END) AS tickets_business,--кол билетов в бизнесе
    		SUM(t.amount) as tickets_total_sum,	--общая сумма билетов
    		SUM(CASE WHEN t.fare_conditions = 'Economy' THEN t.amount END) AS econom_sum,	-- сумма билетов в экономе
    		SUM(CASE WHEN t.fare_conditions = 'Business' THEN t.amount END) AS business_sum	--сумма билетов в бизнесе
	FROM
    		dst_project.ticket_flights as t
	WHERE t.flight_id IN (SELECT flight_id FROM f1)	-- отбор по полетам в курсоре f1
	GROUP BY t.flight_id),

t3 as(	--выбираем информацию по купленным билетам из т-цы ticket_flights по обратным рейсам 
	SELECT
    		tr.flight_id,
    		COUNT(tr.ticket_no) as tickets_total,	--общее количество билетов
    		COUNT(CASE WHEN tr.fare_conditions = 'Economy' THEN tr.ticket_no END) AS tickets_econom, -- кол билетов в экономе
    		COUNT(CASE WHEN tr.fare_conditions = 'Business' THEN tr.ticket_no END) AS tickets_business,--кол билетов в бизнесе
    		SUM(tr.amount) as tickets_total_sum,	--общая сумма билетов
    		SUM(CASE WHEN tr.fare_conditions = 'Economy' THEN tr.amount END) AS econom_sum,	-- сумма билетов в экономе
    		SUM(CASE WHEN tr.fare_conditions = 'Business' THEN tr.amount END) AS business_sum	--сумма билетов в бизнесе
	FROM
    		dst_project.ticket_flights as tr
	WHERE tr.flight_id IN (SELECT flight_id_r FROM f1)	-- отбор по полетам в курсоре f1
	GROUP BY tr.flight_id),

s2 as(	--выбираем информацию по местам в салоне из т-цы seats
	SELECT DISTINCT 
		f1.flight_id, 
		CEILING(COUNT(s.seat_no)*0.7) breakeven, --кол безубыточности 70% мест
		COUNT(CASE WHEN s.fare_conditions = 'Economy' THEN s.seat_no END) AS seat_econom, --кол мест в экономе
    	COUNT(CASE WHEN s.fare_conditions = 'Business' THEN s.seat_no END) AS seat_business --кол мест в бизнесе
	FROM dst_project.seats s 
	JOIN f1 ON s.aircraft_code = f1.aircraft_code -- привязка к коду модели самолета
	GROUP BY f1.flight_id)

SELECT f1.*, 
	t2.tickets_total,
	t2.tickets_econom,
	t2.tickets_business,
	round(t2.tickets_total_sum/1000,3) tickets_total_sum, 
	round(t2.econom_sum/1000,3) econom_sum,
	round(t2.business_sum/1000,3) business_sum,
	s2.seat_econom, 
	s2.seat_business, 
	s2.breakeven,
	r.model,	-- модель самолета
	r.range,		-- дальность полета данной модели самолета
	round(t2.tickets_total*100/(s2.seat_econom+s2.seat_business),2) fullness_total, --заполненность салона общая
	round(t2.tickets_econom*100/(s2.seat_econom),2) fullness_econom,		--заполненность эконом
	round(t2.tickets_business*100/(s2.seat_business),2) fullness_business,		--заполненность бизнес
	t3.tickets_total tickets_total_r, 	--кол билетов на рейсе сюда
	t3.tickets_econom tickets_econom_r,	--кол билетов эконом  на рейсе сюда
	t3.tickets_business tickets_business_r,	--кол билетов бизнес  на рейсе сюда
	round(t3.tickets_total_sum/1000,3) tickets_total_sum_r, 	--сумма билетов на рейсе сюда
	round(t3.econom_sum/1000,3) econom_sum_r,		--сумма эконом билетов на рейсе сюда
	round(t3.business_sum/1000,3) business_sum_r,	--сумма бизнес  билетов на рейсе сюда
	round(t3.tickets_total*100/(s2.seat_econom+s2.seat_business),2) fullness_total_r, --заполненность салона общая на обратном рейсе
	round(t3.tickets_econom*100/(s2.seat_econom),2) fullness_econom_r,		--заполненность эконом на обратном рейсе
	round(t3.tickets_business*100/(s2.seat_business),2) fullness_business_r		--заполненность бизнес на обратном рейсе

FROM f1
JOIN t2 ON f1.flight_id = t2.flight_id
JOIN t3 ON f1.flight_id_r = t3.flight_id
JOIN s2 ON f1.flight_id = s2.flight_id
JOIN dst_project.aircrafts r ON f1.aircraft_code = r.aircraft_code
ORDER BY f1.scheduled_departure
--ORDER BY fullness_total --сортировка по наполняемости салона самолета на рейсе из Анапы
